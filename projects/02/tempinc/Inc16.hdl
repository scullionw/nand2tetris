// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Adds 1 to 16 bit number
 */

CHIP Inc16 {
    IN in[16];  // 16 bit input
    OUT out[16]; // 16 bit output

    PARTS:
    // Put you code here:
    Not(in=in[0], out=out1);
    Pass(in=out1, out=out[0]);
    Not(in=out1, out=flip1);
    And(a=in[0], b=flip1, out=qflip1);
    //
    Xor(a=in[1], b=qflip1, out=out2);
    Pass(in=out2, out=out[1]);
    Not(in=out2, out=flip2);
    And(a=in[1], b=flip2, out=qflip2);
    //
    Xor(a=in[2], b=qflip2, out=out3);
    Pass(in=out3, out=out[2]);
    Not(in=out3, out=flip3);
    And(a=in[2], b=flip3, out=qflip3);
    //
    Xor(a=in[3], b=qflip3, out=out4);
    Pass(in=out4, out=out[3]);
    Not(in=out4, out=flip4);
    And(a=in[3], b=flip4, out=qflip4);
    //
    Xor(a=in[4], b=qflip4, out=out5);
    Pass(in=out5, out=out[4]);
    Not(in=out5, out=flip5);
    And(a=in[4], b=flip5, out=qflip5);
    //
    Xor(a=in[5], b=qflip5, out=out6);
    Pass(in=out6, out=out[5]);
    Not(in=out6, out=flip6);
    And(a=in[5], b=flip6, out=qflip6);
    //
    Xor(a=in[6], b=qflip6, out=out7);
    Pass(in=out7, out=out[6]);
    Not(in=out7, out=flip7);
    And(a=in[6], b=flip7, out=qflip7);
    //
    Xor(a=in[7], b=qflip7, out=out8);
    Pass(in=out8, out=out[7]);
    Not(in=out8, out=flip8);
    And(a=in[7], b=flip8, out=qflip8);
    //
    Xor(a=in[8], b=qflip8, out=out9);
    Pass(in=out9, out=out[8]);
    Not(in=out9, out=flip9);
    And(a=in[8], b=flip9, out=qflip9);
    //
    Xor(a=in[9], b=qflip9, out=out10);
    Pass(in=out10, out=out[9]);
    Not(in=out10, out=flip10);
    And(a=in[9], b=flip10, out=qflip10);
    //
    Xor(a=in[10], b=qflip10, out=out11);
    Pass(in=out11, out=out[10]);
    Not(in=out11, out=flip11);
    And(a=in[10], b=flip11, out=qflip11);
    //
    Xor(a=in[11], b=qflip11, out=out12);
    Pass(in=out12, out=out[11]);
    Not(in=out12, out=flip12);
    And(a=in[11], b=flip12, out=qflip12);
    //
    Xor(a=in[12], b=qflip12, out=out13);
    Pass(in=out13, out=out[12]);
    Not(in=out13, out=flip13);
    And(a=in[12], b=flip13, out=qflip13);
    //
    Xor(a=in[13], b=qflip13, out=out14);
    Pass(in=out14, out=out[13]);
    Not(in=out14, out=flip14);
    And(a=in[13], b=flip14, out=qflip14);
    //
    Xor(a=in[14], b=qflip14, out=out15);
    Pass(in=out15, out=out[14]);
    Not(in=out15, out=flip15);
    And(a=in[14], b=flip15, out=qflip15);
    //
    Xor(a=in[15], b=qflip15, out=out16);
    Pass(in=out16, out=out[15]);
    //

}